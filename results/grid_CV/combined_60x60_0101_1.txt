


>>>> [best parameter from grid searching] <<<<
 SVC(C=10, cache_size=200, class_weight=None, coef0=0.0, degree=2, gamma=0.001,
  kernel=poly, max_iter=-1, probability=False, random_state=None,
  shrinking=True, tol=0.001, verbose=False) 



0.089 (+/-0.000) for {'degree': 2, 'gamma': 1e-06, 'C': 0.01, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 1e-06, 'C': 0.01, 'kernel': 'poly'}
0.649 (+/-0.001) for {'degree': 2, 'gamma': 1e-06, 'C': 0.01, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 1e-05, 'C': 0.01, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 1e-05, 'C': 0.01, 'kernel': 'poly'}
0.649 (+/-0.001) for {'degree': 2, 'gamma': 1e-05, 'C': 0.01, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 0.0001, 'C': 0.01, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 0.0001, 'C': 0.01, 'kernel': 'poly'}
0.649 (+/-0.001) for {'degree': 2, 'gamma': 0.0001, 'C': 0.01, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 0.001, 'C': 0.01, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 0.001, 'C': 0.01, 'kernel': 'poly'}
0.649 (+/-0.001) for {'degree': 2, 'gamma': 0.001, 'C': 0.01, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-06, 'C': 0.01, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-06, 'C': 0.01, 'kernel': 'poly'}
0.649 (+/-0.001) for {'degree': 3, 'gamma': 1e-06, 'C': 0.01, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-05, 'C': 0.01, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-05, 'C': 0.01, 'kernel': 'poly'}
0.649 (+/-0.001) for {'degree': 3, 'gamma': 1e-05, 'C': 0.01, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 0.0001, 'C': 0.01, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 0.0001, 'C': 0.01, 'kernel': 'poly'}
0.649 (+/-0.001) for {'degree': 3, 'gamma': 0.0001, 'C': 0.01, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 0.001, 'C': 0.01, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 0.001, 'C': 0.01, 'kernel': 'poly'}
0.649 (+/-0.001) for {'degree': 3, 'gamma': 0.001, 'C': 0.01, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-06, 'C': 0.01, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-06, 'C': 0.01, 'kernel': 'poly'}
0.649 (+/-0.001) for {'degree': 4, 'gamma': 1e-06, 'C': 0.01, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-05, 'C': 0.01, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-05, 'C': 0.01, 'kernel': 'poly'}
0.649 (+/-0.001) for {'degree': 4, 'gamma': 1e-05, 'C': 0.01, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 0.0001, 'C': 0.01, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 0.0001, 'C': 0.01, 'kernel': 'poly'}
0.649 (+/-0.001) for {'degree': 4, 'gamma': 0.0001, 'C': 0.01, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 0.001, 'C': 0.01, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 0.001, 'C': 0.01, 'kernel': 'poly'}
0.649 (+/-0.001) for {'degree': 4, 'gamma': 0.001, 'C': 0.01, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 1e-06, 'C': 0.1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 1e-06, 'C': 0.1, 'kernel': 'poly'}
0.630 (+/-0.003) for {'degree': 2, 'gamma': 1e-06, 'C': 0.1, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 1e-05, 'C': 0.1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 1e-05, 'C': 0.1, 'kernel': 'poly'}
0.630 (+/-0.003) for {'degree': 2, 'gamma': 1e-05, 'C': 0.1, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 0.0001, 'C': 0.1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 0.0001, 'C': 0.1, 'kernel': 'poly'}
0.630 (+/-0.003) for {'degree': 2, 'gamma': 0.0001, 'C': 0.1, 'kernel': 'linear'}
0.400 (+/-0.003) for {'degree': 2, 'gamma': 0.001, 'C': 0.1, 'kernel': 'rbf'}
0.151 (+/-0.002) for {'degree': 2, 'gamma': 0.001, 'C': 0.1, 'kernel': 'poly'}
0.630 (+/-0.003) for {'degree': 2, 'gamma': 0.001, 'C': 0.1, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-06, 'C': 0.1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-06, 'C': 0.1, 'kernel': 'poly'}
0.630 (+/-0.003) for {'degree': 3, 'gamma': 1e-06, 'C': 0.1, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-05, 'C': 0.1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-05, 'C': 0.1, 'kernel': 'poly'}
0.630 (+/-0.003) for {'degree': 3, 'gamma': 1e-05, 'C': 0.1, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 0.0001, 'C': 0.1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 0.0001, 'C': 0.1, 'kernel': 'poly'}
0.630 (+/-0.003) for {'degree': 3, 'gamma': 0.0001, 'C': 0.1, 'kernel': 'linear'}
0.400 (+/-0.003) for {'degree': 3, 'gamma': 0.001, 'C': 0.1, 'kernel': 'rbf'}
0.091 (+/-0.000) for {'degree': 3, 'gamma': 0.001, 'C': 0.1, 'kernel': 'poly'}
0.630 (+/-0.003) for {'degree': 3, 'gamma': 0.001, 'C': 0.1, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-06, 'C': 0.1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-06, 'C': 0.1, 'kernel': 'poly'}
0.630 (+/-0.003) for {'degree': 4, 'gamma': 1e-06, 'C': 0.1, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-05, 'C': 0.1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-05, 'C': 0.1, 'kernel': 'poly'}
0.630 (+/-0.003) for {'degree': 4, 'gamma': 1e-05, 'C': 0.1, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 0.0001, 'C': 0.1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 0.0001, 'C': 0.1, 'kernel': 'poly'}
0.630 (+/-0.003) for {'degree': 4, 'gamma': 0.0001, 'C': 0.1, 'kernel': 'linear'}
0.400 (+/-0.003) for {'degree': 4, 'gamma': 0.001, 'C': 0.1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 0.001, 'C': 0.1, 'kernel': 'poly'}
0.630 (+/-0.003) for {'degree': 4, 'gamma': 0.001, 'C': 0.1, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 1e-06, 'C': 1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 1e-06, 'C': 1, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 1e-06, 'C': 1, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 1e-05, 'C': 1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 1e-05, 'C': 1, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 1e-05, 'C': 1, 'kernel': 'linear'}
0.631 (+/-0.006) for {'degree': 2, 'gamma': 0.0001, 'C': 1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 0.0001, 'C': 1, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 0.0001, 'C': 1, 'kernel': 'linear'}
0.720 (+/-0.005) for {'degree': 2, 'gamma': 0.001, 'C': 1, 'kernel': 'rbf'}
0.663 (+/-0.004) for {'degree': 2, 'gamma': 0.001, 'C': 1, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 0.001, 'C': 1, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-06, 'C': 1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-06, 'C': 1, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 1e-06, 'C': 1, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-05, 'C': 1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-05, 'C': 1, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 1e-05, 'C': 1, 'kernel': 'linear'}
0.631 (+/-0.006) for {'degree': 3, 'gamma': 0.0001, 'C': 1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 0.0001, 'C': 1, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 0.0001, 'C': 1, 'kernel': 'linear'}
0.720 (+/-0.005) for {'degree': 3, 'gamma': 0.001, 'C': 1, 'kernel': 'rbf'}
0.437 (+/-0.004) for {'degree': 3, 'gamma': 0.001, 'C': 1, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 0.001, 'C': 1, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-06, 'C': 1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-06, 'C': 1, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 1e-06, 'C': 1, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-05, 'C': 1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-05, 'C': 1, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 1e-05, 'C': 1, 'kernel': 'linear'}
0.631 (+/-0.006) for {'degree': 4, 'gamma': 0.0001, 'C': 1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 0.0001, 'C': 1, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 0.0001, 'C': 1, 'kernel': 'linear'}
0.720 (+/-0.005) for {'degree': 4, 'gamma': 0.001, 'C': 1, 'kernel': 'rbf'}
0.202 (+/-0.001) for {'degree': 4, 'gamma': 0.001, 'C': 1, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 0.001, 'C': 1, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 1e-06, 'C': 10, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 1e-06, 'C': 10, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 1e-06, 'C': 10, 'kernel': 'linear'}
0.634 (+/-0.005) for {'degree': 2, 'gamma': 1e-05, 'C': 10, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 1e-05, 'C': 10, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 1e-05, 'C': 10, 'kernel': 'linear'}
0.688 (+/-0.002) for {'degree': 2, 'gamma': 0.0001, 'C': 10, 'kernel': 'rbf'}
0.151 (+/-0.002) for {'degree': 2, 'gamma': 0.0001, 'C': 10, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 0.0001, 'C': 10, 'kernel': 'linear'}
0.727 (+/-0.002) for {'degree': 2, 'gamma': 0.001, 'C': 10, 'kernel': 'rbf'}
0.741 (+/-0.003) for {'degree': 2, 'gamma': 0.001, 'C': 10, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 0.001, 'C': 10, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-06, 'C': 10, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-06, 'C': 10, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 1e-06, 'C': 10, 'kernel': 'linear'}
0.634 (+/-0.005) for {'degree': 3, 'gamma': 1e-05, 'C': 10, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-05, 'C': 10, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 1e-05, 'C': 10, 'kernel': 'linear'}
0.688 (+/-0.002) for {'degree': 3, 'gamma': 0.0001, 'C': 10, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 0.0001, 'C': 10, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 0.0001, 'C': 10, 'kernel': 'linear'}
0.727 (+/-0.002) for {'degree': 3, 'gamma': 0.001, 'C': 10, 'kernel': 'rbf'}
0.687 (+/-0.006) for {'degree': 3, 'gamma': 0.001, 'C': 10, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 0.001, 'C': 10, 'kernel': 'linear'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-06, 'C': 10, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-06, 'C': 10, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 1e-06, 'C': 10, 'kernel': 'linear'}
0.634 (+/-0.005) for {'degree': 4, 'gamma': 1e-05, 'C': 10, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-05, 'C': 10, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 1e-05, 'C': 10, 'kernel': 'linear'}
0.688 (+/-0.002) for {'degree': 4, 'gamma': 0.0001, 'C': 10, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 0.0001, 'C': 10, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 0.0001, 'C': 10, 'kernel': 'linear'}
0.727 (+/-0.002) for {'degree': 4, 'gamma': 0.001, 'C': 10, 'kernel': 'rbf'}
0.528 (+/-0.003) for {'degree': 4, 'gamma': 0.001, 'C': 10, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 0.001, 'C': 10, 'kernel': 'linear'}
0.634 (+/-0.005) for {'degree': 2, 'gamma': 1e-06, 'C': 100, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 1e-06, 'C': 100, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 1e-06, 'C': 100, 'kernel': 'linear'}
0.685 (+/-0.003) for {'degree': 2, 'gamma': 1e-05, 'C': 100, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 1e-05, 'C': 100, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 1e-05, 'C': 100, 'kernel': 'linear'}
0.658 (+/-0.002) for {'degree': 2, 'gamma': 0.0001, 'C': 100, 'kernel': 'rbf'}
0.663 (+/-0.004) for {'degree': 2, 'gamma': 0.0001, 'C': 100, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 0.0001, 'C': 100, 'kernel': 'linear'}
0.725 (+/-0.003) for {'degree': 2, 'gamma': 0.001, 'C': 100, 'kernel': 'rbf'}
0.728 (+/-0.003) for {'degree': 2, 'gamma': 0.001, 'C': 100, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 0.001, 'C': 100, 'kernel': 'linear'}
0.634 (+/-0.005) for {'degree': 3, 'gamma': 1e-06, 'C': 100, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-06, 'C': 100, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 1e-06, 'C': 100, 'kernel': 'linear'}
0.685 (+/-0.003) for {'degree': 3, 'gamma': 1e-05, 'C': 100, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-05, 'C': 100, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 1e-05, 'C': 100, 'kernel': 'linear'}
0.658 (+/-0.002) for {'degree': 3, 'gamma': 0.0001, 'C': 100, 'kernel': 'rbf'}
0.091 (+/-0.000) for {'degree': 3, 'gamma': 0.0001, 'C': 100, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 0.0001, 'C': 100, 'kernel': 'linear'}
0.725 (+/-0.003) for {'degree': 3, 'gamma': 0.001, 'C': 100, 'kernel': 'rbf'}
0.688 (+/-0.004) for {'degree': 3, 'gamma': 0.001, 'C': 100, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 0.001, 'C': 100, 'kernel': 'linear'}
0.634 (+/-0.005) for {'degree': 4, 'gamma': 1e-06, 'C': 100, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-06, 'C': 100, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 1e-06, 'C': 100, 'kernel': 'linear'}
0.685 (+/-0.003) for {'degree': 4, 'gamma': 1e-05, 'C': 100, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-05, 'C': 100, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 1e-05, 'C': 100, 'kernel': 'linear'}
0.658 (+/-0.002) for {'degree': 4, 'gamma': 0.0001, 'C': 100, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 0.0001, 'C': 100, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 0.0001, 'C': 100, 'kernel': 'linear'}
0.725 (+/-0.003) for {'degree': 4, 'gamma': 0.001, 'C': 100, 'kernel': 'rbf'}
0.588 (+/-0.011) for {'degree': 4, 'gamma': 0.001, 'C': 100, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 0.001, 'C': 100, 'kernel': 'linear'}
0.684 (+/-0.002) for {'degree': 2, 'gamma': 1e-06, 'C': 1000, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 1e-06, 'C': 1000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 1e-06, 'C': 1000, 'kernel': 'linear'}
0.642 (+/-0.002) for {'degree': 2, 'gamma': 1e-05, 'C': 1000, 'kernel': 'rbf'}
0.151 (+/-0.002) for {'degree': 2, 'gamma': 1e-05, 'C': 1000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 1e-05, 'C': 1000, 'kernel': 'linear'}
0.645 (+/-0.004) for {'degree': 2, 'gamma': 0.0001, 'C': 1000, 'kernel': 'rbf'}
0.741 (+/-0.003) for {'degree': 2, 'gamma': 0.0001, 'C': 1000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 0.0001, 'C': 1000, 'kernel': 'linear'}
0.725 (+/-0.003) for {'degree': 2, 'gamma': 0.001, 'C': 1000, 'kernel': 'rbf'}
0.691 (+/-0.004) for {'degree': 2, 'gamma': 0.001, 'C': 1000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 0.001, 'C': 1000, 'kernel': 'linear'}
0.684 (+/-0.002) for {'degree': 3, 'gamma': 1e-06, 'C': 1000, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-06, 'C': 1000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 1e-06, 'C': 1000, 'kernel': 'linear'}
0.642 (+/-0.002) for {'degree': 3, 'gamma': 1e-05, 'C': 1000, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-05, 'C': 1000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 1e-05, 'C': 1000, 'kernel': 'linear'}
0.645 (+/-0.004) for {'degree': 3, 'gamma': 0.0001, 'C': 1000, 'kernel': 'rbf'}
0.437 (+/-0.004) for {'degree': 3, 'gamma': 0.0001, 'C': 1000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 0.0001, 'C': 1000, 'kernel': 'linear'}
0.725 (+/-0.003) for {'degree': 3, 'gamma': 0.001, 'C': 1000, 'kernel': 'rbf'}
0.634 (+/-0.005) for {'degree': 3, 'gamma': 0.001, 'C': 1000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 0.001, 'C': 1000, 'kernel': 'linear'}
0.684 (+/-0.002) for {'degree': 4, 'gamma': 1e-06, 'C': 1000, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-06, 'C': 1000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 1e-06, 'C': 1000, 'kernel': 'linear'}
0.642 (+/-0.002) for {'degree': 4, 'gamma': 1e-05, 'C': 1000, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-05, 'C': 1000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 1e-05, 'C': 1000, 'kernel': 'linear'}
0.645 (+/-0.004) for {'degree': 4, 'gamma': 0.0001, 'C': 1000, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 0.0001, 'C': 1000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 0.0001, 'C': 1000, 'kernel': 'linear'}
0.725 (+/-0.003) for {'degree': 4, 'gamma': 0.001, 'C': 1000, 'kernel': 'rbf'}
0.538 (+/-0.007) for {'degree': 4, 'gamma': 0.001, 'C': 1000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 0.001, 'C': 1000, 'kernel': 'linear'}
0.639 (+/-0.002) for {'degree': 2, 'gamma': 1e-06, 'C': 10000, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 2, 'gamma': 1e-06, 'C': 10000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 1e-06, 'C': 10000, 'kernel': 'linear'}
0.631 (+/-0.003) for {'degree': 2, 'gamma': 1e-05, 'C': 10000, 'kernel': 'rbf'}
0.663 (+/-0.004) for {'degree': 2, 'gamma': 1e-05, 'C': 10000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 1e-05, 'C': 10000, 'kernel': 'linear'}
0.645 (+/-0.004) for {'degree': 2, 'gamma': 0.0001, 'C': 10000, 'kernel': 'rbf'}
0.728 (+/-0.003) for {'degree': 2, 'gamma': 0.0001, 'C': 10000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 0.0001, 'C': 10000, 'kernel': 'linear'}
0.725 (+/-0.003) for {'degree': 2, 'gamma': 0.001, 'C': 10000, 'kernel': 'rbf'}
0.689 (+/-0.004) for {'degree': 2, 'gamma': 0.001, 'C': 10000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 0.001, 'C': 10000, 'kernel': 'linear'}
0.639 (+/-0.002) for {'degree': 3, 'gamma': 1e-06, 'C': 10000, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-06, 'C': 10000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 1e-06, 'C': 10000, 'kernel': 'linear'}
0.631 (+/-0.003) for {'degree': 3, 'gamma': 1e-05, 'C': 10000, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-05, 'C': 10000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 1e-05, 'C': 10000, 'kernel': 'linear'}
0.645 (+/-0.004) for {'degree': 3, 'gamma': 0.0001, 'C': 10000, 'kernel': 'rbf'}
0.687 (+/-0.006) for {'degree': 3, 'gamma': 0.0001, 'C': 10000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 0.0001, 'C': 10000, 'kernel': 'linear'}
0.725 (+/-0.003) for {'degree': 3, 'gamma': 0.001, 'C': 10000, 'kernel': 'rbf'}
0.587 (+/-0.008) for {'degree': 3, 'gamma': 0.001, 'C': 10000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 0.001, 'C': 10000, 'kernel': 'linear'}
0.639 (+/-0.002) for {'degree': 4, 'gamma': 1e-06, 'C': 10000, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-06, 'C': 10000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 1e-06, 'C': 10000, 'kernel': 'linear'}
0.631 (+/-0.003) for {'degree': 4, 'gamma': 1e-05, 'C': 10000, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-05, 'C': 10000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 1e-05, 'C': 10000, 'kernel': 'linear'}
0.645 (+/-0.004) for {'degree': 4, 'gamma': 0.0001, 'C': 10000, 'kernel': 'rbf'}
0.202 (+/-0.001) for {'degree': 4, 'gamma': 0.0001, 'C': 10000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 0.0001, 'C': 10000, 'kernel': 'linear'}
0.725 (+/-0.003) for {'degree': 4, 'gamma': 0.001, 'C': 10000, 'kernel': 'rbf'}
0.468 (+/-0.012) for {'degree': 4, 'gamma': 0.001, 'C': 10000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 0.001, 'C': 10000, 'kernel': 'linear'}
0.629 (+/-0.003) for {'degree': 2, 'gamma': 1e-06, 'C': 100000, 'kernel': 'rbf'}
0.151 (+/-0.002) for {'degree': 2, 'gamma': 1e-06, 'C': 100000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 1e-06, 'C': 100000, 'kernel': 'linear'}
0.630 (+/-0.003) for {'degree': 2, 'gamma': 1e-05, 'C': 100000, 'kernel': 'rbf'}
0.741 (+/-0.003) for {'degree': 2, 'gamma': 1e-05, 'C': 100000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 1e-05, 'C': 100000, 'kernel': 'linear'}
0.645 (+/-0.004) for {'degree': 2, 'gamma': 0.0001, 'C': 100000, 'kernel': 'rbf'}
0.691 (+/-0.004) for {'degree': 2, 'gamma': 0.0001, 'C': 100000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 0.0001, 'C': 100000, 'kernel': 'linear'}
0.725 (+/-0.003) for {'degree': 2, 'gamma': 0.001, 'C': 100000, 'kernel': 'rbf'}
0.689 (+/-0.004) for {'degree': 2, 'gamma': 0.001, 'C': 100000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 2, 'gamma': 0.001, 'C': 100000, 'kernel': 'linear'}
0.629 (+/-0.003) for {'degree': 3, 'gamma': 1e-06, 'C': 100000, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 3, 'gamma': 1e-06, 'C': 100000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 1e-06, 'C': 100000, 'kernel': 'linear'}
0.630 (+/-0.003) for {'degree': 3, 'gamma': 1e-05, 'C': 100000, 'kernel': 'rbf'}
0.091 (+/-0.000) for {'degree': 3, 'gamma': 1e-05, 'C': 100000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 1e-05, 'C': 100000, 'kernel': 'linear'}
0.645 (+/-0.004) for {'degree': 3, 'gamma': 0.0001, 'C': 100000, 'kernel': 'rbf'}
0.688 (+/-0.004) for {'degree': 3, 'gamma': 0.0001, 'C': 100000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 0.0001, 'C': 100000, 'kernel': 'linear'}
0.725 (+/-0.003) for {'degree': 3, 'gamma': 0.001, 'C': 100000, 'kernel': 'rbf'}
0.582 (+/-0.007) for {'degree': 3, 'gamma': 0.001, 'C': 100000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 3, 'gamma': 0.001, 'C': 100000, 'kernel': 'linear'}
0.629 (+/-0.003) for {'degree': 4, 'gamma': 1e-06, 'C': 100000, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-06, 'C': 100000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 1e-06, 'C': 100000, 'kernel': 'linear'}
0.630 (+/-0.003) for {'degree': 4, 'gamma': 1e-05, 'C': 100000, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'degree': 4, 'gamma': 1e-05, 'C': 100000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 1e-05, 'C': 100000, 'kernel': 'linear'}
0.645 (+/-0.004) for {'degree': 4, 'gamma': 0.0001, 'C': 100000, 'kernel': 'rbf'}
0.528 (+/-0.003) for {'degree': 4, 'gamma': 0.0001, 'C': 100000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 0.0001, 'C': 100000, 'kernel': 'linear'}
0.725 (+/-0.003) for {'degree': 4, 'gamma': 0.001, 'C': 100000, 'kernel': 'rbf'}
0.445 (+/-0.012) for {'degree': 4, 'gamma': 0.001, 'C': 100000, 'kernel': 'poly'}
0.628 (+/-0.003) for {'degree': 4, 'gamma': 0.001, 'C': 100000, 'kernel': 'linear'}



>>>> [best parameter from grid searching] <<<<
 LinearSVC(C=0.0001, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss=l2, multi_class=ovr, penalty=l2,
     random_state=None, tol=0.0001, verbose=0) 



0.658 (+/-0.004) for {'C': 0.0001}
0.657 (+/-0.003) for {'C': 0.001}
0.605 (+/-0.005) for {'C': 0.01}
0.559 (+/-0.004) for {'C': 0.1}
0.558 (+/-0.003) for {'C': 1}
0.557 (+/-0.003) for {'C': 10}
0.556 (+/-0.003) for {'C': 100}
0.550 (+/-0.005) for {'C': 1000}
0.538 (+/-0.008) for {'C': 10000}
0.542 (+/-0.009) for {'C': 100000}
0.547 (+/-0.003) for {'C': 1000000}

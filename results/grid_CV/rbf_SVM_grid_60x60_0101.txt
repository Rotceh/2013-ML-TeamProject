


>>>> [best parameter from grid searching] <<<<
 SVC(C=10, cache_size=200, class_weight=None, coef0=0.0, degree=3, gamma=0.002,
  kernel=rbf, max_iter=-1, probability=False, random_state=None,
  shrinking=True, tol=0.001, verbose=False) 



0.088 (+/-0.000) for {'C': 1, 'gamma': 1, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 1, 'gamma': 0.5, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 1, 'gamma': 0.2, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 1, 'gamma': 0.1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'C': 1, 'gamma': 0.05, 'kernel': 'rbf'}
0.090 (+/-0.000) for {'C': 1, 'gamma': 0.02, 'kernel': 'rbf'}
0.312 (+/-0.007) for {'C': 1, 'gamma': 0.01, 'kernel': 'rbf'}
0.695 (+/-0.005) for {'C': 1, 'gamma': 0.005, 'kernel': 'rbf'}
0.744 (+/-0.005) for {'C': 1, 'gamma': 0.002, 'kernel': 'rbf'}
0.720 (+/-0.005) for {'C': 1, 'gamma': 0.001, 'kernel': 'rbf'}
0.694 (+/-0.002) for {'C': 1, 'gamma': 0.0005, 'kernel': 'rbf'}
0.663 (+/-0.003) for {'C': 1, 'gamma': 0.0002, 'kernel': 'rbf'}
0.631 (+/-0.006) for {'C': 1, 'gamma': 0.0001, 'kernel': 'rbf'}
0.494 (+/-0.004) for {'C': 1, 'gamma': 5e-05, 'kernel': 'rbf'}
0.143 (+/-0.002) for {'C': 1, 'gamma': 2e-05, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'C': 1, 'gamma': 1e-05, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 10, 'gamma': 1, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 10, 'gamma': 0.5, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 10, 'gamma': 0.2, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 10, 'gamma': 0.1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'C': 10, 'gamma': 0.05, 'kernel': 'rbf'}
0.090 (+/-0.001) for {'C': 10, 'gamma': 0.02, 'kernel': 'rbf'}
0.347 (+/-0.007) for {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}
0.707 (+/-0.004) for {'C': 10, 'gamma': 0.005, 'kernel': 'rbf'}
0.749 (+/-0.004) for {'C': 10, 'gamma': 0.002, 'kernel': 'rbf'}
0.727 (+/-0.002) for {'C': 10, 'gamma': 0.001, 'kernel': 'rbf'}
0.698 (+/-0.002) for {'C': 10, 'gamma': 0.0005, 'kernel': 'rbf'}
0.688 (+/-0.001) for {'C': 10, 'gamma': 0.0002, 'kernel': 'rbf'}
0.688 (+/-0.002) for {'C': 10, 'gamma': 0.0001, 'kernel': 'rbf'}
0.688 (+/-0.003) for {'C': 10, 'gamma': 5e-05, 'kernel': 'rbf'}
0.665 (+/-0.003) for {'C': 10, 'gamma': 2e-05, 'kernel': 'rbf'}
0.634 (+/-0.005) for {'C': 10, 'gamma': 1e-05, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 50, 'gamma': 1, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 50, 'gamma': 0.5, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 50, 'gamma': 0.2, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 50, 'gamma': 0.1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'C': 50, 'gamma': 0.05, 'kernel': 'rbf'}
0.090 (+/-0.001) for {'C': 50, 'gamma': 0.02, 'kernel': 'rbf'}
0.347 (+/-0.007) for {'C': 50, 'gamma': 0.01, 'kernel': 'rbf'}
0.707 (+/-0.004) for {'C': 50, 'gamma': 0.005, 'kernel': 'rbf'}
0.749 (+/-0.004) for {'C': 50, 'gamma': 0.002, 'kernel': 'rbf'}
0.725 (+/-0.003) for {'C': 50, 'gamma': 0.001, 'kernel': 'rbf'}
0.693 (+/-0.002) for {'C': 50, 'gamma': 0.0005, 'kernel': 'rbf'}
0.672 (+/-0.002) for {'C': 50, 'gamma': 0.0002, 'kernel': 'rbf'}
0.659 (+/-0.001) for {'C': 50, 'gamma': 0.0001, 'kernel': 'rbf'}
0.669 (+/-0.003) for {'C': 50, 'gamma': 5e-05, 'kernel': 'rbf'}
0.686 (+/-0.003) for {'C': 50, 'gamma': 2e-05, 'kernel': 'rbf'}
0.686 (+/-0.002) for {'C': 50, 'gamma': 1e-05, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 100, 'gamma': 1, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 100, 'gamma': 0.5, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 100, 'gamma': 0.2, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 100, 'gamma': 0.1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'C': 100, 'gamma': 0.05, 'kernel': 'rbf'}
0.090 (+/-0.001) for {'C': 100, 'gamma': 0.02, 'kernel': 'rbf'}
0.347 (+/-0.007) for {'C': 100, 'gamma': 0.01, 'kernel': 'rbf'}
0.707 (+/-0.004) for {'C': 100, 'gamma': 0.005, 'kernel': 'rbf'}
0.749 (+/-0.004) for {'C': 100, 'gamma': 0.002, 'kernel': 'rbf'}
0.725 (+/-0.003) for {'C': 100, 'gamma': 0.001, 'kernel': 'rbf'}
0.692 (+/-0.002) for {'C': 100, 'gamma': 0.0005, 'kernel': 'rbf'}
0.669 (+/-0.002) for {'C': 100, 'gamma': 0.0002, 'kernel': 'rbf'}
0.658 (+/-0.002) for {'C': 100, 'gamma': 0.0001, 'kernel': 'rbf'}
0.655 (+/-0.002) for {'C': 100, 'gamma': 5e-05, 'kernel': 'rbf'}
0.671 (+/-0.001) for {'C': 100, 'gamma': 2e-05, 'kernel': 'rbf'}
0.685 (+/-0.003) for {'C': 100, 'gamma': 1e-05, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 200, 'gamma': 1, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 200, 'gamma': 0.5, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 200, 'gamma': 0.2, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 200, 'gamma': 0.1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'C': 200, 'gamma': 0.05, 'kernel': 'rbf'}
0.090 (+/-0.001) for {'C': 200, 'gamma': 0.02, 'kernel': 'rbf'}
0.347 (+/-0.007) for {'C': 200, 'gamma': 0.01, 'kernel': 'rbf'}
0.707 (+/-0.004) for {'C': 200, 'gamma': 0.005, 'kernel': 'rbf'}
0.749 (+/-0.004) for {'C': 200, 'gamma': 0.002, 'kernel': 'rbf'}
0.725 (+/-0.003) for {'C': 200, 'gamma': 0.001, 'kernel': 'rbf'}
0.691 (+/-0.003) for {'C': 200, 'gamma': 0.0005, 'kernel': 'rbf'}
0.663 (+/-0.003) for {'C': 200, 'gamma': 0.0002, 'kernel': 'rbf'}
0.655 (+/-0.002) for {'C': 200, 'gamma': 0.0001, 'kernel': 'rbf'}
0.651 (+/-0.002) for {'C': 200, 'gamma': 5e-05, 'kernel': 'rbf'}
0.655 (+/-0.001) for {'C': 200, 'gamma': 2e-05, 'kernel': 'rbf'}
0.670 (+/-0.002) for {'C': 200, 'gamma': 1e-05, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 500, 'gamma': 1, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 500, 'gamma': 0.5, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 500, 'gamma': 0.2, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 500, 'gamma': 0.1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'C': 500, 'gamma': 0.05, 'kernel': 'rbf'}
0.090 (+/-0.001) for {'C': 500, 'gamma': 0.02, 'kernel': 'rbf'}
0.347 (+/-0.007) for {'C': 500, 'gamma': 0.01, 'kernel': 'rbf'}
0.707 (+/-0.004) for {'C': 500, 'gamma': 0.005, 'kernel': 'rbf'}
0.749 (+/-0.004) for {'C': 500, 'gamma': 0.002, 'kernel': 'rbf'}
0.725 (+/-0.003) for {'C': 500, 'gamma': 0.001, 'kernel': 'rbf'}
0.691 (+/-0.003) for {'C': 500, 'gamma': 0.0005, 'kernel': 'rbf'}
0.660 (+/-0.004) for {'C': 500, 'gamma': 0.0002, 'kernel': 'rbf'}
0.645 (+/-0.003) for {'C': 500, 'gamma': 0.0001, 'kernel': 'rbf'}
0.642 (+/-0.004) for {'C': 500, 'gamma': 5e-05, 'kernel': 'rbf'}
0.645 (+/-0.002) for {'C': 500, 'gamma': 2e-05, 'kernel': 'rbf'}
0.651 (+/-0.001) for {'C': 500, 'gamma': 1e-05, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 1000, 'gamma': 1, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 1000, 'gamma': 0.5, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 1000, 'gamma': 0.2, 'kernel': 'rbf'}
0.088 (+/-0.000) for {'C': 1000, 'gamma': 0.1, 'kernel': 'rbf'}
0.089 (+/-0.000) for {'C': 1000, 'gamma': 0.05, 'kernel': 'rbf'}
0.090 (+/-0.001) for {'C': 1000, 'gamma': 0.02, 'kernel': 'rbf'}
0.347 (+/-0.007) for {'C': 1000, 'gamma': 0.01, 'kernel': 'rbf'}
0.707 (+/-0.004) for {'C': 1000, 'gamma': 0.005, 'kernel': 'rbf'}
0.749 (+/-0.004) for {'C': 1000, 'gamma': 0.002, 'kernel': 'rbf'}
0.725 (+/-0.003) for {'C': 1000, 'gamma': 0.001, 'kernel': 'rbf'}
0.691 (+/-0.003) for {'C': 1000, 'gamma': 0.0005, 'kernel': 'rbf'}
0.660 (+/-0.004) for {'C': 1000, 'gamma': 0.0002, 'kernel': 'rbf'}
0.645 (+/-0.004) for {'C': 1000, 'gamma': 0.0001, 'kernel': 'rbf'}
0.640 (+/-0.003) for {'C': 1000, 'gamma': 5e-05, 'kernel': 'rbf'}
0.641 (+/-0.004) for {'C': 1000, 'gamma': 2e-05, 'kernel': 'rbf'}
0.642 (+/-0.002) for {'C': 1000, 'gamma': 1e-05, 'kernel': 'rbf'}
